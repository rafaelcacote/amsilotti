<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\User;
use Spatie\Permission\Models\Role;

class GiveAdminPermissions extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'user:give-admin {email : O email do usuÃ¡rio}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Dar permissÃµes de administrador total para um usuÃ¡rio';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $email = $this->argument('email');
        
        // Buscar o usuÃ¡rio
        $user = User::where('email', $email)->first();
        
        if (!$user) {
            $this->error("UsuÃ¡rio com email '{$email}' nÃ£o encontrado!");
            return 1;
        }
        
        // Verificar se a role administrador existe
        $adminRole = Role::where('name', 'administrador')->first();
        
        if (!$adminRole) {
            $this->error("Role 'administrador' nÃ£o encontrada! Execute o seeder primeiro: php artisan db:seed --class=RoleAndPermissionSeeder");
            return 1;
        }
        
        // Dar role de administrador
        $user->assignRole('administrador');
        
        $this->info("âœ… UsuÃ¡rio '{$user->name}' ({$user->email}) agora tem permissÃµes de ADMINISTRADOR TOTAL!");
        $this->info("ğŸ”‘ PermissÃµes atribuÃ­das: " . $adminRole->permissions->count() . " permissÃµes");
        
        // Listar algumas permissÃµes principais
        $this->info("ğŸ“‹ Principais permissÃµes:");
        $this->line("   - Gerenciar usuÃ¡rios (view, create, edit, delete users)");
        $this->line("   - Gerenciar configuraÃ§Ãµes (manage settings)");
        $this->line("   - Gerenciar sistema (manage system)");
        $this->line("   - Todas as permissÃµes de clientes, imÃ³veis, vistorias, etc.");
        
        $this->info("\nğŸŒŸ Agora vocÃª pode acessar:");
        $this->line("   - /users (GestÃ£o de UsuÃ¡rios)");
        $this->line("   - /roles (GestÃ£o de Perfis)");
        $this->line("   - /permissions (GestÃ£o de PermissÃµes)");
        $this->line("   - /user-permissions (UsuÃ¡rios & PermissÃµes)");
        
        return 0;
    }
}
